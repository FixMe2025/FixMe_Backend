[
  {
    "test_name": "테스트 1 (약 500자)",
    "original_length": 284,
    "result_length": 284,
    "corrections_count": 8,
    "suggestions_count": 0,
    "correction_status": [
      "PASS 여기애 -> 여기에 (교정됨)",
      "PASS 임력 -> 입력 (교정됨)",
      "PASS 맞춤밥 -> 맞춤법 (교정됨)",
      "PASS 뛰어쓰기 -> 띄어쓰기 (교정됨)",
      "PASS 거기애 -> 거기에 (교정됨)",
      "PASS 안뇽하세요 -> 안녕하세요 (교정됨)",
      "PASS 재대로 -> 제대로 (교정됨)",
      "FAIL 된서 -> 돼서 (교정 안됨)"
    ],
    "original_text": "여기애 한국어 맞춤밥 검사 시스템을 임력해보세요. 이 도구는 사용자가 임력한 텍스트에서 오타와 맞춤법 오류를 찾아서 교정해줍니다. 또한 뛰어쓰기 규칙도 적용하여 더 자연스러운 문장으로 만들어줍니다. 거기애 있는 기능들은 AI 모델과 규칙 기반 시스템을 결합하여 구현되었습니다. 사용자는 최대 이천자까지의 긴 텍스트도 교정할 수 있으며, 시스템이 자동으로 문맥을 보존하면서 적절한 크기로 분할하여 처리합니다. 안뇽하세요 라고 인사하면 안녕하세요 로 교정됩니다. 재대로 된서 좋은 결과를 얻을 수 있을 것입니다.",
    "corrected_text": "여기에 한국어 맞춤법 검사 시스템을 입력해보세요. 이 도구는 사용자가 입력한 텍스트에서 오타와 맞춤법 오류를 찾아서 교정해줍니다. 또한 띄어쓰기 규칙도 적용하여 더 자연스러운 문장으로 만들어줍니다. 거기에 있는 기능들은 AI 모델과 규칙 기반 시스템을 결합하여 구현되었습니다. 사용자는 최대 이천자까지의 긴 텍스트도 교정할 수 있으며, 시스템이 자동으로 문맥을 보존하면서 적절한 크기로 분할하여 처리합니다. 안녕하세요 라고 인사하면 안녕하세요 로 교정됩니다. 제대로 된서 좋은 결과를 얻을 수 있을 것입니다.",
    "corrections": [
      {
        "original": "애",
        "corrected": "에",
        "type": "맞춤법"
      },
      {
        "original": "밥",
        "corrected": "법",
        "type": "맞춤법"
      },
      {
        "original": "임",
        "corrected": "입",
        "type": "맞춤법"
      },
      {
        "original": "임",
        "corrected": "입",
        "type": "맞춤법"
      },
      {
        "original": "뛰",
        "corrected": "띄",
        "type": "맞춤법"
      },
      {
        "original": "애",
        "corrected": "에",
        "type": "맞춤법"
      },
      {
        "original": "뇽",
        "corrected": "녕",
        "type": "맞춤법"
      },
      {
        "original": "재",
        "corrected": "제",
        "type": "맞춤법"
      }
    ],
    "suggestions": [],
    "success": true
  },
  {
    "test_name": "테스트 2 (약 800자)",
    "original_length": 420,
    "result_length": 420,
    "corrections_count": 6,
    "suggestions_count": 1,
    "correction_status": [
      "PASS 임력 -> 입력 (교정됨)",
      "PASS 맞춤밥 -> 맞춤법 (교정됨)",
      "PASS 뛰어쓰기 -> 띄어쓰기 (교정됨)",
      "PASS 거기애 -> 거기에 (교정됨)",
      "PASS 안뇽하세요 -> 안녕하세요 (교정됨)"
    ],
    "original_text": "현재 개발중인 이 프로그램은 사용자들이 임력하는 한국어 문장들을 분석하고 교정하는 시스템입니다. 여러가지 종류의 오류들을 처리할 수 있는데, 예를 들어 맞춤밥 오류나 뛰어쓰기 문제들을 해결할 수 있습니다. 거기애 추가로 문법적 오류도 어느정도 교정이 가능합니다. 이 시스템의 핵심 기술은 자연어 처리 기술과 머신러닝 알고리즘을 결합한 것입니다. 사용자가 긴 문장을 임력하면, 시스템은 먼저 텍스트를 적절한 크기의 청크들로 분할합니다. 그 다음에 각 청크마다 교정 작업을 수행하고, 마지막에 모든 청크들을 다시 하나의 완전한 텍스트로 재조합합니다. 이런 방식으로 처리하면 긴 텍스트도 효율적으로 처리할 수 있습니다. 또한 문맥정보도 최대한 보존할 수 있어서 자연스러운 결과를 얻을 수 있습니다. 안뇽하세요 같은 인사말도 안녕하세요 로 정확히 교정됩니다.",
    "corrected_text": "현재 개발중인 이 프로그램은 사용자들이 입력하는 한국어 문장들을 분석하고 교정하는 시스템입니다. 여러가지 종류의 오류들을 처리할 수 있는데, 예를 들어 맞춤법 오류나 띄어쓰기 문제들을 해결할 수 있습니다. 거기에 추가로 문법적 오류도 어느정도 교정이 가능합니다. 이 시스템의 핵심 기술은 자연어 처리 기술과 머신러닝 알고리즘을 결합한 것입니다. 사용자가 긴 문장을 입력하면, 시스템은 먼저 텍스트를 적절한 크기의 청크들로 분할합니다. 그 다음에 각 청크마다 교정 작업을 수행하고, 마지막에 모든 청크들을 다시 하나의 완전한 텍스트로 재조합합니다. 이런 방식으로 처리하면 긴 텍스트도 효율적으로 처리할 수 있습니다. 또한 문맥정보도 최대한 보존할 수 있어서 자연스러운 결과를 얻을 수 있습니다. 안녕하세요 같은 인사말도 안녕하세요 로 정확히 교정됩니다.",
    "corrections": [
      {
        "original": "임",
        "corrected": "입",
        "type": "맞춤법"
      },
      {
        "original": "밥",
        "corrected": "법",
        "type": "맞춤법"
      },
      {
        "original": "뛰",
        "corrected": "띄",
        "type": "맞춤법"
      },
      {
        "original": "애",
        "corrected": "에",
        "type": "맞춤법"
      },
      {
        "original": "임",
        "corrected": "입",
        "type": "맞춤법"
      },
      {
        "original": "뇽",
        "corrected": "녕",
        "type": "맞춤법"
      }
    ],
    "suggestions": [
      {
        "type": "반복성",
        "original": "있습니다.",
        "suggestion": "'있습니다.' 반복 사용",
        "reason": "'있습니다.'이(가) 3번 반복됩니다. 다양한 표현을 고려해보세요."
      }
    ],
    "success": true
  },
  {
    "test_name": "테스트 3 (약 1200자)",
    "original_length": 586,
    "result_length": 586,
    "corrections_count": 7,
    "suggestions_count": 0,
    "correction_status": [
      "PASS 여기애 -> 여기에 (교정됨)",
      "PASS 임력 -> 입력 (교정됨)",
      "PASS 맞춤밥 -> 맞춤법 (교정됨)",
      "PASS 뛰어쓰기 -> 띄어쓰기 (교정됨)",
      "PASS 거기애 -> 거기에 (교정됨)",
      "PASS 안뇽하세요 -> 안녕하세요 (교정됨)",
      "PASS 재대로 -> 제대로 (교정됨)",
      "FAIL 된서 -> 돼서 (교정 안됨)"
    ],
    "original_text": "한국어는 세계에서 가장 과학적이고 체계적인 문자 체계를 가진 언어 중 하나입니다. 하지만 맞춤밥이나 뛰어쓰기 규칙들이 복잡해서 많은 사람들이 어려워합니다. 특히 외국인들이나 어린 학생들에게는 더욱 어려운 문제입니다. 여기애 개발된 시스템은 이런 문제들을 해결하기 위해 만들어졌습니다. 사용자가 임력한 텍스트를 자동으로 분석하고 교정해주는 기능을 제공합니다. 이 시스템의 가장 큰 장점은 단순히 틀린 부분만 고치는 것이 아니라, 전체적인 문맥을 이해하고 자연스러운 문장으로 만들어준다는 것입니다. 거기애 더해서 사용자가 왜 그 부분이 틀렸는지 설명도 제공합니다. 예를 들어 안뇽하세요 를 안녕하세요 로 교정할 때, 단순히 고치는 것만이 아니라 왜 그렇게 써야 하는지 이유도 알려줍니다. 또한 재대로 된서 같은 복합적인 오류도 제대로 돼서 로 정확하게 교정합니다. 이런 기능들이 모두 합쳐져서 사용자들이 한국어를 더 정확하고 자연스럽게 사용할 수 있도록 도와줍니다. 앞으로도 계속해서 더 많은 기능들을 추가하고 성능을 향상시켜 나갈 계획입니다. 궁극적으로는 모든 한국어 사용자들이 올바르고 아름다운 한국어를 사용할 수 있도록 지원하는 것이 목표입니다.",
    "corrected_text": "한국어는 세계에서 가장 과학적이고 체계적인 문자 체계를 가진 언어 중 하나입니다. 하지만 맞춤법이나 띄어쓰기 규칙들이 복잡해서 많은 사람들이 어려워합니다. 특히 외국인들이나 어린 학생들에게는 더욱 어려운 문제입니다. 여기에 개발된 시스템은 이런 문제들을 해결하기 위해 만들어졌습니다. 사용자가 입력한 텍스트를 자동으로 분석하고 교정해주는 기능을 제공합니다. 이 시스템의 가장 큰 장점은 단순히 틀린 부분만 고치는 것이 아니라, 전체적인 문맥을 이해하고 자연스러운 문장으로 만들어준다는 것입니다. 거기에 더해서 사용자가 왜 그 부분이 틀렸는지 설명도 제공합니다. 예를 들어 안녕하세요 를 안녕하세요 로 교정할 때, 단순히 고치는 것만이 아니라 왜 그렇게 써야 하는지 이유도 알려줍니다. 또한 제대로 된서 같은 복합적인 오류도 제대로 돼서 로 정확하게 교정합니다. 이런 기능들이 모두 합쳐져서 사용자들이 한국어를 더 정확하고 자연스럽게 사용할 수 있도록 도와줍니다. 앞으로도 계속해서 더 많은 기능들을 추가하고 성능을 향상시켜 나갈 계획입니다. 궁극적으로는 모든 한국어 사용자들이 올바르고 아름다운 한국어를 사용할 수 있도록 지원하는 것이 목표입니다.",
    "corrections": [
      {
        "original": "밥",
        "corrected": "법",
        "type": "맞춤법"
      },
      {
        "original": "뛰",
        "corrected": "띄",
        "type": "맞춤법"
      },
      {
        "original": "애",
        "corrected": "에",
        "type": "맞춤법"
      },
      {
        "original": "임",
        "corrected": "입",
        "type": "맞춤법"
      },
      {
        "original": "애",
        "corrected": "에",
        "type": "맞춤법"
      },
      {
        "original": "뇽",
        "corrected": "녕",
        "type": "맞춤법"
      },
      {
        "original": "재",
        "corrected": "제",
        "type": "맞춤법"
      }
    ],
    "suggestions": [],
    "success": true
  }
]